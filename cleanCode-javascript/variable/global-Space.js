/**
 * 전역공간의 사용을 최소화하자
 * 브라우저 환경에서 전역공간은 window 객체 (node.js 환경에서는 global 객체)
 */

// 전역공간을 자제하는 이유
// 의도치 않은 변수의 변경이나 함수의 실행이 일어날 수 있기 때문이다.
// 프로그램의 규모가 커질수록 전역공간은 문제를 일으킬 가능성이 높아진다.

// 전역공간에서 충돌을 피하기 위한 방법
// 1. 전역 변수를 사용하지 않는다.
// 2. 전역 변수를 하나로 관리한다.
// 3. 즉시 실행 함수를 사용한다.
// 4. 네임스페이스 객체를 만든다.
// 5. 모듈 패턴을 사용한다.
// 6. ES6 모듈을 사용한다.
